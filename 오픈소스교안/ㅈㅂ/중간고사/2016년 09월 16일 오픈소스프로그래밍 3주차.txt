git commit --amend
	마지막 커밋한 메세지 수정

git log --pretty=oneline
	한 라인씩 아름답게 보여줌

git checkout -- 파일명
	현재 작업 디렉토리에서 작업한 내용을 삭제한다
	작업 디렉토리 취소 / Staging area 유지

git checkout HEAD 파일명
	add 하기전까지의 작업도 취소
	작업 디렉토리 취소 / Staging area 취소

git reset -- 파일명
	add 한 것만 빼는것
	작업 디렉토리 유지 / Staging area 취소

git reset --hard  = 작업 디렉토리 취소 / Staging area 취소 / 커밋내역 취소
	  --mixed = 작업 디렉토리 유지 / Staging area 취소 / 커밋내역 취소  (기본값)
	  --soft  = 작업 디렉토리 유지 / Staging area 유지 / 커밋내역 취소

git reset --hard ORIG_HEAD
	reset을 한 것을 다시 돌림

git reset --옵션 HEAD~갯수
	최근 커밋을 갯수에따라 취소하고 옵션의 방식을 따른다

git revert HEAD -----> HEAD 는 git log의 노란색 부분
	최신 커밋 이력은 유지하고 삭제하는 기능이 포함된 커밋
	원본 보존의 기능을 갖고있다
	현재 내용은 삭제된 상태로 보여지지만 언제든지 다시 되돌릴 수 있다

git stash
	현재 작업을 저장하는것 = 일종의 임시저장

git stash list
	현재 작업을 저장한 내역을 볼 수 있다

git stash pop
	현재 저장 내역을 불러오고 저장내역에서 삭제가 된다 (add 에서)
	여러개중에 불러오고 싶은것은    ex) git stash pop stash@{0}

git stash drop
	저장내역을 불러오진 않고 제일 최근것의 임시저장된 작업내역이 삭제가됨

git stash apply
	저장내역을 불러오고 저장내역에서 삭제하지 않는다




git pull --allow-unrelated-histories origin master
pull할때 unrelate-histories 오류나는거에 대한 해답법





https://github.com/jerry10004/notice

클래스 6개 만들어라